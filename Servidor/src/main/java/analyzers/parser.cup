/*--------------- 1ra Area: Codigo de Usuario -----------------------*/
//-------> importaciones Y paquetes
package analyzers;

import java_cup.runtime.Symbol;
import java.util.LinkedList;

import models.Login;
import models.NewUser;
import models.NewTrivia;
import models.Modify;

//------> Codigo para el parser,variables, metodos, etc.
parser code
{:

    public String requestName = null;

    //Variables para almacenar los datos de los usuarios nuevos
    public String userName = null;
    public String password = null;
    public String name = null;
    public String institution = null;
    public String date = null;

    //Listas para almacenar los datos de los usuarios logeados
    public static LinkedList<Login> loginList = new LinkedList<Login>();

    //Listas para almacenar los datos de los usuarios nuevos
    public static LinkedList<NewUser> newUserList = new LinkedList<NewUser>();
    private LinkedList<String> userNameList = new LinkedList<String>();
    private LinkedList<String> passwordList = new LinkedList<String>();
    private LinkedList<String> nameList = new LinkedList<String>();
    private LinkedList<String> institutionList = new LinkedList<String>();
    private LinkedList<String> dateList = new LinkedList<String>();

    //Listas para almacenar los datos de la trivia nueva
    public static LinkedList<NewTrivia> newTriviaList = new LinkedList<NewTrivia>();
    private LinkedList<String> idTriviaList = new LinkedList<String>();
    private LinkedList<String> timeList = new LinkedList<String>();
    private LinkedList<String> nameListTrivia = new LinkedList<String>();
    private LinkedList<String> temaList = new LinkedList<String>();
    private LinkedList<String> usuarioTriviaList = new LinkedList<String>();
    private LinkedList<String> dateTriviaList = new LinkedList<String>();

    //Nombre de usuario a eliminar
    public static LinkedList<String> userToDelete = new LinkedList<>();

    //Datos de usuarios a modificar
    private String usernameMod = null;
    private String newUsernameMod = null;
    private String newPasswordMod = null;
    private String newInstitutionMod = null;
    private String newDateMod = null;
    public static LinkedList<Modify> modifyList = new LinkedList<>();

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;

        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        Login data = new Login("error", "errror");
        loginList.add(0, data);
        requestName = "error";
        cleandata();
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;

        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);

        Login data = new Login("error", "errror");
        loginList.add(0, data);
        requestName = "error";
        cleandata();
    }

    private void cleandata(){
        requestName = "error";
        userName = "error";
        password = "error";
        name = "error";
        institution = "error";
        date = "error";
    }
:}

//------> Codigo para las acciones gramaticales
action code
{:

:}

/*--------------- 2da Area: Declaraciones -----------------------*/
//------> declaracion de terminales
terminal String LessThan, GreaterThan, QuestionMark, Equal, XSONsentence, Version, VersionNumber, QuotationMark,
                ExclamationMark, RealizarSolicitud, Colon, UsuarioNuevo, ModificarUsuario, EliminarUsuario,
                LoginUsuario, LeftBrace, RightBrace, LeftBracket, RightBracket, Comma, Values, FinSolicitud,
                Usuario, Password, Nombre, Institucion, DatosUsuario, UsuarioAntiguo, NuevoPassword, niValue,
                FechaCreacion, Date, FinSolicitudes, RealizarSolicitudes, NuevaTrivia, ParametrosTrivia,
                IDTriviaSentence, TiempoPregunta, Tema, UsuarioCreacion, Time, IDTrivia, ListaTrivias, FechaModificacion;

//------> declaracion de no terminales
nonterminal String INICIO, SINGLEREQUEST, USUARIONUEVO, MODIFICARUSUARIO, ELIMINARUSUARIO, LOGINUSUARIO, NUEVATRIVIA,
                    NEWUSERLOOP, NEWUSERBLOCK, NEWTRIVIALOOP, NEWTRIVIABLOCK, VALUES, NAMES, VALUESCONCAT, LOOP,
                    LOOP2, HEADER, LISTATRIVIAS, ELIMINARUSUARIOLOOP, MODIFICARUSUARIOLOOP, MODIFICARUSUARIOBLOCK;

start with INICIO;

/*--------------- 3ra Area: Reglas Semanticas -----------------------*/
INICIO ::= HEADER LOOP
            | HEADER LOGINUSUARIO;


HEADER ::= LessThan QuestionMark XSONsentence Version Equal QuotationMark VersionNumber QuotationMark QuestionMark GreaterThan;


LOOP ::= SINGLEREQUEST
        | LessThan ExclamationMark RealizarSolicitudes GreaterThan LOOP2 {:System.out.println("Entra en sentencia multiple");:}
        | /*epsilon*/;


LOOP2 ::= SINGLEREQUEST LOOP2
        | LessThan FinSolicitudes ExclamationMark GreaterThan {:System.out.println("Fin de sentencias multiples");:};


SINGLEREQUEST ::= USUARIONUEVO
                | MODIFICARUSUARIO
                | ELIMINARUSUARIO
                | NUEVATRIVIA
                | LISTATRIVIAS;


LOGINUSUARIO ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark LoginUsuario QuotationMark GreaterThan
                LeftBrace QuotationMark DatosUsuario QuotationMark Colon LeftBracket LeftBrace
                QuotationMark Usuario QuotationMark Colon QuotationMark VALUES:username QuotationMark Comma
                QuotationMark Password QuotationMark Colon QuotationMark VALUES:password QuotationMark
                RightBrace RightBracket
                RightBrace
                LessThan FinSolicitud ExclamationMark GreaterThan
                {:System.out.println("Sentencia de login reconocida y aceptada");
                   requestName = "login";
                   Login data = new Login(username, password);
                   loginList.add(0, data);:};


USUARIONUEVO ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark UsuarioNuevo QuotationMark GreaterThan
                    LeftBrace QuotationMark DatosUsuario QuotationMark Colon LeftBracket
                    NEWUSERLOOP
                    RightBracket RightBrace
                    LessThan FinSolicitud ExclamationMark GreaterThan
                    {:requestName = "nuevo";:};


NEWUSERLOOP ::= LeftBrace NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK RightBrace Comma NEWUSERLOOP
                {:NewUser data = new NewUser(userNameList.poll(), passwordList.poll(), nameList.poll(), institutionList.poll(), dateList.poll());
                newUserList.add(data);:}
                | LeftBrace NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK NEWUSERBLOCK RightBrace
                {:NewUser data = new NewUser(userNameList.poll(), passwordList.poll(), nameList.poll(), institutionList.poll(), dateList.poll());
                newUserList.add(data);:};


NEWUSERBLOCK ::= QuotationMark Usuario QuotationMark Colon QuotationMark VALUES:usernameVal QuotationMark Comma
                {:userName = (String) usernameVal;
                userNameList.add(userName);:}
                | QuotationMark Password QuotationMark Colon QuotationMark VALUES:passwordVal QuotationMark Comma
                 {:password = (String) passwordVal;
                 passwordList.add(password);:}
                | QuotationMark Nombre QuotationMark Colon QuotationMark NAMES:nameVal QuotationMark Comma
                {:name = (String) nameVal;
                nameList.add(name);:}
                | QuotationMark Institucion QuotationMark Colon QuotationMark NAMES:institutionVal QuotationMark Comma
                {:institution = (String) institutionVal;
                institutionList.add(institution);:}
                | QuotationMark FechaCreacion QuotationMark Colon QuotationMark Date:dateVal QuotationMark Comma
                {:date = (String) dateVal;
                dateList.add(date);:};


NUEVATRIVIA ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark NuevaTrivia QuotationMark GreaterThan
                LeftBrace QuotationMark ParametrosTrivia QuotationMark Colon LeftBracket
                NEWTRIVIALOOP
                RightBracket RightBrace
                LessThan FinSolicitud ExclamationMark GreaterThan {:System.out.println("Sentencia de nueva trivia reconocida y aceptada");
                requestName = "nuevaTrivia";:};


NEWTRIVIALOOP ::= LeftBrace NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK RightBrace Comma NEWTRIVIALOOP
                {:NewTrivia data = new NewTrivia(idTriviaList.poll(), timeList.poll(), nameListTrivia.poll(), temaList.poll(), usuarioTriviaList.poll(),
                                                dateTriviaList.poll());
                newTriviaList.add(data);:}
                | LeftBrace NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK NEWTRIVIABLOCK RightBrace
                {:NewTrivia data = new NewTrivia(idTriviaList.poll(), timeList.poll(), nameListTrivia.poll(), temaList.poll(), usuarioTriviaList.poll(),
                                                 dateTriviaList.poll());
                newTriviaList.add(data);:};


NEWTRIVIABLOCK ::= QuotationMark IDTriviaSentence QuotationMark Colon QuotationMark IDTrivia:idTriviaVal QuotationMark Comma
                    {:idTriviaList.add(String.valueOf(idTriviaVal));:}
                    | QuotationMark TiempoPregunta QuotationMark Colon Time:timeVal Comma
                    {:timeList.add(String.valueOf(timeVal));:}
                    | QuotationMark Nombre QuotationMark Colon QuotationMark VALUESCONCAT:nameVal QuotationMark Comma
                    {:nameListTrivia.add(String.valueOf(nameVal));:}
                    | QuotationMark Tema QuotationMark Colon QuotationMark VALUESCONCAT:temaVal QuotationMark Comma
                    {:temaList.add(String.valueOf(temaVal));:}
                    | QuotationMark UsuarioCreacion QuotationMark Colon QuotationMark NAMES:usuarioVal QuotationMark Comma
                    {:usuarioTriviaList.add(String.valueOf(usuarioVal));:}
                    | QuotationMark FechaCreacion QuotationMark Colon QuotationMark Date:dateVal QuotationMark Comma
                    {:dateTriviaList.add(String.valueOf(dateVal));:};


MODIFICARUSUARIO ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark ModificarUsuario QuotationMark GreaterThan
                    LeftBrace QuotationMark DatosUsuario QuotationMark Colon LeftBracket
                    MODIFICARUSUARIOLOOP
                    RightBracket RightBrace
                    LessThan FinSolicitud ExclamationMark GreaterThan
                    {:System.out.println("Sentencia de modificacion de usuario reconocida y aceptada");
                    requestName = "modificar";:};

MODIFICARUSUARIOLOOP ::= LeftBrace MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK
                        RightBrace Comma MODIFICARUSUARIOLOOP
                        {:Modify data = new Modify(usernameMod, newUsernameMod, newPasswordMod, newInstitutionMod, newDateMod);
                            modifyList.add(data);:}
                        |LeftBrace MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK MODIFICARUSUARIOBLOCK RightBrace
                        {:Modify data = new Modify(usernameMod, newUsernameMod, newPasswordMod, newInstitutionMod, newDateMod);
                            modifyList.add(data);:};

MODIFICARUSUARIOBLOCK ::= QuotationMark UsuarioAntiguo QuotationMark Colon QuotationMark VALUES:usernameVal QuotationMark Comma
                        {:usernameMod = String.valueOf(usernameVal);:}
                        | QuotationMark UsuarioNuevo QuotationMark Colon QuotationMark VALUES:newUsernameVal QuotationMark Comma
                        {:newUsernameMod = String.valueOf(newUsernameVal);:}
                        | QuotationMark NuevoPassword QuotationMark Colon QuotationMark VALUES:newPasswordVal QuotationMark Comma
                        {:newPasswordMod = String.valueOf(newPasswordVal);:}
                        | QuotationMark FechaModificacion QuotationMark Colon QuotationMark Date:newDateVal QuotationMark Comma
                        {:newDateMod = String.valueOf(newDateVal);:}
                        | QuotationMark Institucion QuotationMark Colon QuotationMark NAMES:newInstitutionVal QuotationMark Comma
                        {:newInstitutionMod = String.valueOf(newInstitutionVal);:};

ELIMINARUSUARIO ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark EliminarUsuario QuotationMark GreaterThan
                    LeftBrace QuotationMark DatosUsuario QuotationMark Colon LeftBracket
                    ELIMINARUSUARIOLOOP
                    RightBracket RightBrace
                    LessThan FinSolicitud ExclamationMark GreaterThan
                    {:System.out.println("Sentencia de eliminacion de usuario reconocida y aceptada");
                    requestName = "eliminar";:};

ELIMINARUSUARIOLOOP ::= LeftBrace
                        QuotationMark Usuario QuotationMark Colon QuotationMark VALUES:usernameVal QuotationMark
                        RightBrace Comma ELIMINARUSUARIOLOOP
                        {:userToDelete.add(String.valueOf(usernameVal));:}
                        | LeftBrace
                        QuotationMark Usuario QuotationMark Colon QuotationMark VALUES:usernameVal QuotationMark
                        RightBrace
                        {:userToDelete.add(String.valueOf(usernameVal));:};

LISTATRIVIAS ::= LessThan ExclamationMark RealizarSolicitud Colon QuotationMark ListaTrivias QuotationMark GreaterThan
                LessThan FinSolicitud ExclamationMark GreaterThan
                {:System.out.println("Sentencia de lista de trivias reconocida y aceptada");
                requestName = "listaTrivias";:};


VALUES ::= Values:a {:RESULT = String.valueOf(a);:}
          |niValue:b {:RESULT = String.valueOf(b);:}
          |Time:a {:RESULT = String.valueOf(a);:};


VALUESCONCAT ::= Values:a VALUESCONCAT:b {:RESULT = String.valueOf(a) + " " + String.valueOf(b);:}
                | niValue:a VALUESCONCAT:b {:RESULT = String.valueOf(a) + " " + String.valueOf(b);:}
                | Values:a {:RESULT = String.valueOf(a);:}
                | niValue:a {:RESULT = String.valueOf(a);:};


NAMES ::= niValue:a NAMES:b {:RESULT = String.valueOf(a) + " " + String.valueOf(b);:}
        |niValue:b {:RESULT = String.valueOf(b);:};